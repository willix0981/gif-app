{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","gifexpertapp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","cats","alert","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIcA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAkB9C,OAEI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,KAGdO,MAAM,gCAQV,SACA,uBACAC,KAAK,OACLC,YAAY,iCACZC,MAAQX,EACRY,SAvBsB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,+BCPlBG,EAAO,uCAAI,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARrB,kBAWbM,GAXa,4CAAJ,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KA4BtC,OAdAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKrB,CAACpB,IAEGqB,EDxBuBK,CAAa1B,GAA/Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAUnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGV,qBAAKA,UAAU,YAAf,SAIUH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE1BxBgB,EAAe,WAAO,IAAD,EAGI3C,mBAAS,IAHb,mBAGzB4C,EAHyB,KAGb7C,EAHa,KAQlC,OACI,qCAEI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG6C,EAAWnB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCfjB6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.27d397e7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n export const AddCategory =  ({setCategories}) => {\r\n    const [inputvalue, setinputvalue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setinputvalue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputvalue.trim().length > 2){\r\n            setCategories(cats => [inputvalue, ...cats]);\r\n            setinputvalue('');\r\n        }\r\n        else{\r\n            alert('debe de ingresar un mensaje');\r\n        }\r\n      \r\n\r\n\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"introduce el gif a buscar aqui\"\r\n        value ={inputvalue}\r\n        onChange={handleInputChange} />\r\n        </form>\r\n        \r\n    )\r\n\r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs =  async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pImKkhtmB8SnwTKx9JxVKEchaUSm6FuR`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n} \r\n\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n\r\n    return(\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    // useEffect( () => {\r\n    //     getGifs(category)\r\n    //     .then(setImages);\r\n    // }, [category ])\r\n\r\n    \r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n    {/* {loading? 'cargando...': 'Datacargada'} */}\r\n        { <div className=\"card-grid\">\r\n            \r\n            \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n        </div> }\r\n        </>\r\n    )\r\n\r\n\r\n\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    \r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            \r\n        \r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            \r\n            \r\n        });\r\n    }, [category ])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  \r\n  const [categories, setCategories] = useState([]);\r\n  \r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories,'onepiece']);\r\n  // }\r\nreturn(\r\n    <>\r\n        \r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        \r\n        <ol>\r\n          {categories.map(category => \r\n           (<GifGrid\r\n            key={category}\r\n            category={category}/>)\r\n          )}\r\n        </ol>\r\n        \r\n\r\n    </>\r\n  )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './gifexpertapp'\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}